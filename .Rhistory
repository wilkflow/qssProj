xmean = mean(xvals)
round(sum((xvals))^2, digits=6)
x = c(171, 177, 168, 169, 184, 180, 175, 165, 176, 178, 182, 174, 179, 166, 181)
summary(x)
boxplot(x)
var(x)
std(x)
var(x)
sd(x)
IQR(x)
pnorm(-175, 174, sqrt(38)/sqrt(15)) + 1 - pnorm(175, 174, sqrt(38)/sqrt(15))
pnorm(-175, 174, 38/sqrt(15)) + 1 - pnorm(175, 174, 38/sqrt(15))
x = c(171, 177, 168, 169, 184, 180, 175, 165, 176, 178, 182, 174, 179, 166, 181)
summary(x)
m = pnorm(-175, 174, sqrt(38)/sqrt(15)) + 1 - pnorm(175, 174, sqrt(38)/sqrt(15))
T2 <- c()
a <- 1
for (i in x){
T2[a] <- (i - mean(x))Ë†2/38
x = c(171, 177, 168, 169, 184, 180, 175, 165, 176, 178, 182, 174, 179, 166, 181)
summary(x)
m = pnorm(-175, 174, sqrt(38)/sqrt(15)) + 1 - pnorm(175, 174, sqrt(38)/sqrt(15))
T2 <- c()
a <- 1
for (i in x){
T2[a] = (i - mean(x))^2/38
a <- a +1
}
T2Value <- sum(T2)
T2Value
x = c(171, 177, 168, 169, 184, 180, 175, 165, 176, 178, 182, 174, 179, 166, 181)
summary(x)
m = pnorm(-175, 174, sqrt(38)/sqrt(15)) + 1 - pnorm(175, 174, sqrt(38)/sqrt(15))
T2 <- c()
a <- 1
for (i in x){
T2[a] = (i - mean(x))^2/38
a <- a +1
}
val <- sum(T2)
val
x = c(171, 177, 168, 169, 184, 180, 175, 165, 176, 178, 182, 174, 179, 166, 181)
summary(x)
m = pnorm(-175, 174, sqrt(38)/sqrt(15)) + 1 - pnorm(175, 174, sqrt(38)/sqrt(15))
T2 <- c()
a <- 1
for (i in x){
T2[a] = (i - mean(x))^2/38
a <- a +1
}
val = sum(T2)
val
1 - pchisq(13.65, 15)
1 - pchisq(13.26, 14)
T3 <- (mean(x) - 174)/sqrt(var(x)/15)
T3
t = T3
t=  (mean(SRS) - 174)/sqrt(var/15)
t =  (mean(SRS) - 174)/sqrt(var/15)
t =  (mean(x) - 174)/sqrt(var(x)/15)
t
2 * (1 - pt(t, 14))
mpg
x = c(231, 337)
y = c(963, 963)
t.test(x, y, alternative = "two.sided", var.equal = TRUE)
x = c(231, 337)
y = c(963, 963)
prop.test(x, y, p = NULL, alternative = "two.sided", correct = TRUE)
x = c(231, 337)
y = c(963, 963)
prop.test(x, y, p = NULL, alternative = "two.sided", correct = TRUE)
chisq.test(x)
#library(wordcloud)
#library(RColorBrewer)
#gemini_to_sentiment <- c('1' = "anger", '2' = "boredom", '3' = "empty", '4' = "enthusiasm",
#                         '5' = "fun", '6' = "happiness", '7' = "hate", '8' = "love",
#                         '9' = "neutral", '10' = "relief", '11' = "sadness", '12' = "surprise",
#                         '13' = "worry", 'NA' = "NA")
#data$sentiment2 <- as.character(gemini_to_sentiment[as.character(data$gemini)])
#data$sentiment2[is.na(data$sentiment2)] <- "Unknown"
#table(data$sentiment2)
ndat = read.csv('./text_emotion_proc_gemini.csv')
wordcloud(names(ndat$sentiment), freq = sentiment_freq, scale = c(3, 0.5), max.words = 100, random.order = FALSE, colors = brewer.pal(8, "Dark2"))
library(wordcloud)
#library(wordcloud)
#library(RColorBrewer)
#gemini_to_sentiment <- c('1' = "anger", '2' = "boredom", '3' = "empty", '4' = "enthusiasm",
#                         '5' = "fun", '6' = "happiness", '7' = "hate", '8' = "love",
#                         '9' = "neutral", '10' = "relief", '11' = "sadness", '12' = "surprise",
#                         '13' = "worry", 'NA' = "NA")
#data$sentiment2 <- as.character(gemini_to_sentiment[as.character(data$gemini)])
#data$sentiment2[is.na(data$sentiment2)] <- "Unknown"
#table(data$sentiment2)
ndat = read.csv('./text_emotion_proc_gemini.csv')
wordcloud(names(ndat$sentiment), freq = sentiment_freq, scale = c(3, 0.5), max.words = 100, random.order = FALSE, colors = brewer.pal(8, "Dark2"))
library(ggplot2)
library(dplyr)
library(e1071)
data <- read.csv("text_emotion_with_gemini.csv")
head(data)
str(data)
sentiment_mapping <- c('anger' = 1, 'boredom' = 2, 'empty' = 3, 'enthusiasm' = 4,
'fun' = 5, 'happiness' = 6, 'hate' = 7, 'love' = 8,
'neutral' = 9, 'relief' = 10, 'sadness' = 11, 'surprise' = 12,
'worry' = 13)
data$sentiment <- as.integer(factor(data$sentiment, levels = names(sentiment_mapping), labels = sentiment_mapping))
head(data$sentiment)
sentiment_counts <- table(data$sentiment)
ggplot(data, aes(x=factor(sentiment, levels = names(sentiment_counts)))) +
geom_bar() +
labs(x = "Sentiment", y = "Count", title = "Distribution of Sentiments") +
theme_minimal()
gemini_counts <- table(data$gemini)
ggplot(data, aes(x=factor(gemini, levels = names(gemini_counts)))) +
geom_bar(fill = "steelblue") +
labs(x = "Gemini Sentiment", y = "Count", title = "Distribution of Gemini API Sentiments") +
theme_minimal()
cross_tab <- table(data$sentiment, data$gemini)
ggplot(as.data.frame(cross_tab), aes(Var1, Freq, fill = Var2)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Original Sentiment", y = "Count", fill = "Gemini Sentiment",
title = "Comparison of Original Sentiment and Gemini Classification") +
theme_minimal()
original_counts <- data %>%
count(sentiment, name = "original_count")
gemini_counts <- data %>%
count(gemini, name = "gemini_count")
levels_sentiment <- sort(as.numeric(unique(c(as.character(original_counts$sentiment), as.character(gemini_counts$gemini)))))
levels_sentiment <- as.character(levels_sentiment)
levels_sentiment[is.na(levels_sentiment)] <- "NA"
original_counts$sentiment <- factor(original_counts$sentiment, levels = levels_sentiment)
gemini_counts$gemini <- factor(gemini_counts$gemini, levels = levels_sentiment)
combined_counts <- full_join(original_counts, gemini_counts, by = c("sentiment" = "gemini"))
plot_data <- tidyr::pivot_longer(combined_counts, cols = c("original_count", "gemini_count"),
names_to = "type", values_to = "count")
plot_data$count[is.na(plot_data$count)] <- 0
ggplot(plot_data, aes(x = sentiment, y = count, fill = type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
scale_fill_manual(values = c("original_count" = "blue", "gemini_count" = "red")) +
labs(x = "Sentiment", y = "Count", title = "Comparison of Original and Gemini Sentiment Counts") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(wordcloud)
#library(wordcloud)
#library(RColorBrewer)
#gemini_to_sentiment <- c('1' = "anger", '2' = "boredom", '3' = "empty", '4' = "enthusiasm",
#                         '5' = "fun", '6' = "happiness", '7' = "hate", '8' = "love",
#                         '9' = "neutral", '10' = "relief", '11' = "sadness", '12' = "surprise",
#                         '13' = "worry", 'NA' = "NA")
#data$sentiment2 <- as.character(gemini_to_sentiment[as.character(data$gemini)])
#data$sentiment2[is.na(data$sentiment2)] <- "Unknown"
#table(data$sentiment2)
ndat = read.csv('./text_emotion_proc_gemini.csv')
wordcloud(names(ndat$sentiment), freq = ndat$sentiment, scale = c(3, 0.5), max.words = 100, random.order = FALSE, colors = brewer.pal(8, "Dark2"))
library(wordcloud)
#library(wordcloud)
#library(RColorBrewer)
#gemini_to_sentiment <- c('1' = "anger", '2' = "boredom", '3' = "empty", '4' = "enthusiasm",
#                         '5' = "fun", '6' = "happiness", '7' = "hate", '8' = "love",
#                         '9' = "neutral", '10' = "relief", '11' = "sadness", '12' = "surprise",
#                         '13' = "worry", 'NA' = "NA")
#data$sentiment2 <- as.character(gemini_to_sentiment[as.character(data$gemini)])
#data$sentiment2[is.na(data$sentiment2)] <- "Unknown"
#table(data$sentiment2)
library(tm)
ndat = read.csv('./text_emotion_proc_gemini.csv')
tdm <- TermDocumentMatrix(ndat$sentiment)
w <- sort(rowSums(tdm), decreasing = TRUE)
tdm <- TermDocumentMatrix(ndat$sentiment)
w <- sort(rowSums(tdm), decreasing = TRUE)
tdm <- TermDocumentMatrix(ndat$sentiment)
wordcloud(words = names(tdm),
freq = tdm,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
corpus = iconv(ndat$sentiment)
corpus = Corpus(VectorSource(corpus))
tdm <- TermDocumentMatrix(corpus)
tdm <- as.matrix(tdm)
w <- sort(rowSums(tdm), decreasing = TRUE)
wordcloud(words = names(w),
freq = w,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
corpus = iconv(ndat$gemini)
corpus = Corpus(VectorSource(corpus))
tdm <- TermDocumentMatrix(corpus)
tdm <- as.matrix(tdm)
w <- sort(rowSums(tdm), decreasing = TRUE)
wordcloud(words = names(w),
freq = w,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
corpus = iconv(ndat$gemini)
corpus = Corpus(VectorSource(corpus))
tdm <- TermDocumentMatrix(corpus)
tdm <- as.matrix(tdm)
w <- sort(rowSums(tdm), decreasing = TRUE)
wordcloud(words = names(w),
freq = w,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
library(nnet)
multinom_model <- multinom(sentiment ~ gemini, data = data)
summary(multinom_model)
lm_model <- lm(sentiment ~ gemini, data = data)
summary(lm_model)
confusionMatrix(data$sentiment, data$gemini, positive = NULL, dnn = c("Prediction", "Gemini"))
import(caret)
library(caret)
library(caret)
confusionMatrix(data$sentiment, data$gemini, positive = NULL, dnn = c("Prediction", "Gemini"))
data
library(ggplot2)
library(dplyr)
library(e1071)
data <- read.csv("text_emotion_with_gemini.csv")
head(data)
str(data)
data = na.omit(data)
sentiment_mapping <- c('anger' = 1, 'boredom' = 2, 'empty' = 3, 'enthusiasm' = 4,
'fun' = 5, 'happiness' = 6, 'hate' = 7, 'love' = 8,
'neutral' = 9, 'relief' = 10, 'sadness' = 11, 'surprise' = 12,
'worry' = 13)
data$sentiment <- as.integer(factor(data$sentiment, levels = names(sentiment_mapping), labels = sentiment_mapping))
head(data$sentiment)
data
library(nnet)
multinom_model <- multinom(sentiment ~ gemini, data = data)
summary(multinom_model)
library(caret)
confusionMatrix(data$sentiment, data$gemini, positive = NULL, dnn = c("Prediction", "Gemini"))
data$sentiment
data$gemini
data$sentiment
library(caret)
confusionMatrix(data$sentiment, data$gemini, positive = NULL, dnn = c("Prediction", "Gemini"))
library(caret) #lol it brokey bc forgor to factor
confusionMatrix(as.factor(data$sentiment), as.factor(data$gemini), positive = NULL, dnn = c("Prediction", "Gemini"))
text_emotion <- read.csv("./text_emotion_with_gemini.csv")
setwd("~/GitHub/qssProj")
text_emotion <- read.csv("./text_emotion_with_gemini.csv")
head(text_emotion) #optional: check the beginning of the dataset
#remove all NA's to only analyze Gemini's performance
text_emotion_only_gemini <- na.omit(text_emotion)
head(text_emotion_only_gemini) #optional: verify that the dataset was cleaned
# Define a function to map numeric values to sentiment words
map_sentiment <- function(value) {
sentiment_map <- c("anger", "boredom", "empty", "enthusiasm", "fun",
"happiness", "hate", "love", "neutral", "relief",
"sadness", "surprise", "worry")
return(sentiment_map[value])
}
# Assuming your dataset is named text_emotion
# Convert the numeric values in the gemini column to sentiment words
text_emotion_only_gemini$gemini <- sapply(text_emotion_only_gemini$gemini, map_sentiment)
write.csv(x=text_emotion_only_gemini,'./text_emotion_only_gemini.csv')
text_emotion <- read.csv("./text_emotion_with_gemini.csv")
head(text_emotion) #optional: check the beginning of the dataset
#remove all NA's to only analyze Gemini's performance
text_emotion_only_gemini <- na.omit(text_emotion)
head(text_emotion_only_gemini) #optional: verify that the dataset was cleaned
# Define a function to map numeric values to sentiment words
map_sentiment <- function(value) {
sentiment_map <- c("anger", "boredom", "empty", "enthusiasm", "fun",
"happiness", "hate", "love", "neutral", "relief",
"sadness", "surprise", "worry")
return(sentiment_map[value])
}
# Assuming your dataset is named text_emotion
# Convert the numeric values in the gemini column to sentiment words
text_emotion_only_gemini$gemini <- sapply(text_emotion_only_gemini$gemini, map_sentiment)
write.csv(x=text_emotion_only_gemini,'./text_emotion_proc_gemini.csv')
library(ggplot2)
library(dplyr)
library(e1071)
data <- read.csv("text_emotion_with_gemini.csv")
head(data)
str(data)
sentiment_mapping <- c('anger' = 1, 'boredom' = 2, 'empty' = 3, 'enthusiasm' = 4,
'fun' = 5, 'happiness' = 6, 'hate' = 7, 'love' = 8,
'neutral' = 9, 'relief' = 10, 'sadness' = 11, 'surprise' = 12,
'worry' = 13)
data$sentiment <- as.integer(factor(data$sentiment, levels = names(sentiment_mapping), labels = sentiment_mapping))
head(data$sentiment)
sentiment_counts <- table(data$sentiment)
ggplot(data, aes(x=factor(sentiment, levels = names(sentiment_counts)))) +
geom_bar() +
labs(x = "Sentiment", y = "Count", title = "Distribution of Sentiments") +
theme_minimal()
gemini_counts <- table(data$gemini)
ggplot(data, aes(x=factor(gemini, levels = names(gemini_counts)))) +
geom_bar(fill = "steelblue") +
labs(x = "Gemini Sentiment", y = "Count", title = "Distribution of Gemini API Sentiments") +
theme_minimal()
cross_tab <- table(data$sentiment, data$gemini)
ggplot(as.data.frame(cross_tab), aes(Var1, Freq, fill = Var2)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Original Sentiment", y = "Count", fill = "Gemini Sentiment",
title = "Comparison of Original Sentiment and Gemini Classification") +
theme_minimal()
original_counts <- data %>%
count(sentiment, name = "original_count")
gemini_counts <- data %>%
count(gemini, name = "gemini_count")
levels_sentiment <- sort(as.numeric(unique(c(as.character(original_counts$sentiment), as.character(gemini_counts$gemini)))))
levels_sentiment <- as.character(levels_sentiment)
levels_sentiment[is.na(levels_sentiment)] <- "NA"
original_counts$sentiment <- factor(original_counts$sentiment, levels = levels_sentiment)
gemini_counts$gemini <- factor(gemini_counts$gemini, levels = levels_sentiment)
combined_counts <- full_join(original_counts, gemini_counts, by = c("sentiment" = "gemini"))
plot_data <- tidyr::pivot_longer(combined_counts, cols = c("original_count", "gemini_count"),
names_to = "type", values_to = "count")
plot_data$count[is.na(plot_data$count)] <- 0
ggplot(plot_data, aes(x = sentiment, y = count, fill = type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
scale_fill_manual(values = c("original_count" = "blue", "gemini_count" = "red")) +
labs(x = "Sentiment", y = "Count", title = "Comparison of Original and Gemini Sentiment Counts") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(wordcloud)
#library(wordcloud)
#library(RColorBrewer)
#gemini_to_sentiment <- c('1' = "anger", '2' = "boredom", '3' = "empty", '4' = "enthusiasm",
#                         '5' = "fun", '6' = "happiness", '7' = "hate", '8' = "love",
#                         '9' = "neutral", '10' = "relief", '11' = "sadness", '12' = "surprise",
#                         '13' = "worry", 'NA' = "NA")
#data$sentiment2 <- as.character(gemini_to_sentiment[as.character(data$gemini)])
#data$sentiment2[is.na(data$sentiment2)] <- "Unknown"
#table(data$sentiment2)
library(tm)
ndat = read.csv('./text_emotion_proc_gemini.csv')
corpus = iconv(ndat$sentiment)
corpus = Corpus(VectorSource(corpus))
tdm <- TermDocumentMatrix(corpus)
tdm <- as.matrix(tdm)
w <- sort(rowSums(tdm), decreasing = TRUE)
wordcloud(words = names(w),
freq = w,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
corpus = iconv(ndat$gemini)
corpus = Corpus(VectorSource(corpus))
tdm <- TermDocumentMatrix(corpus)
tdm <- as.matrix(tdm)
w <- sort(rowSums(tdm), decreasing = TRUE)
wordcloud(words = names(w),
freq = w,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
library(nnet)
multinom_model <- multinom(sentiment ~ gemini, data = data)
summary(multinom_model)
lm_model <- lm(sentiment ~ gemini, data = data)
summary(lm_model)
library(caret) #lol it brokey bc forgor to factor
confusionMatrix(as.factor(data$sentiment), as.factor(data$gemini), positive = NULL, dnn = c("Prediction", "Gemini"))
library(ggplot2)
library(dplyr)
library(e1071)
data <- read.csv("text_emotion_with_gemini.csv")
head(data)
str(data)
sentiment_mapping <- c('anger' = 1, 'boredom' = 2, 'empty' = 3, 'enthusiasm' = 4,
'fun' = 5, 'happiness' = 6, 'hate' = 7, 'love' = 8,
'neutral' = 9, 'relief' = 10, 'sadness' = 11, 'surprise' = 12,
'worry' = 13)
data$sentiment <- as.integer(factor(data$sentiment, levels = names(sentiment_mapping), labels = sentiment_mapping))
head(data$sentiment)
sentiment_counts <- table(data$sentiment)
ggplot(data, aes(x=factor(sentiment, levels = names(sentiment_counts)))) +
geom_bar() +
labs(x = "Sentiment", y = "Count", title = "Distribution of Sentiments") +
theme_minimal()
gemini_counts <- table(data$gemini)
ggplot(data, aes(x=factor(gemini, levels = names(gemini_counts)))) +
geom_bar(fill = "steelblue") +
labs(x = "Gemini Sentiment", y = "Count", title = "Distribution of Gemini API Sentiments") +
theme_minimal()
cross_tab <- table(data$sentiment, data$gemini)
ggplot(as.data.frame(cross_tab), aes(Var1, Freq, fill = Var2)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Original Sentiment", y = "Count", fill = "Gemini Sentiment",
title = "Comparison of Original Sentiment and Gemini Classification") +
theme_minimal()
original_counts <- data %>%
count(sentiment, name = "original_count")
gemini_counts <- data %>%
count(gemini, name = "gemini_count")
levels_sentiment <- sort(as.numeric(unique(c(as.character(original_counts$sentiment), as.character(gemini_counts$gemini)))))
levels_sentiment <- as.character(levels_sentiment)
levels_sentiment[is.na(levels_sentiment)] <- "NA"
original_counts$sentiment <- factor(original_counts$sentiment, levels = levels_sentiment)
gemini_counts$gemini <- factor(gemini_counts$gemini, levels = levels_sentiment)
combined_counts <- full_join(original_counts, gemini_counts, by = c("sentiment" = "gemini"))
plot_data <- tidyr::pivot_longer(combined_counts, cols = c("original_count", "gemini_count"),
names_to = "type", values_to = "count")
plot_data$count[is.na(plot_data$count)] <- 0
ggplot(plot_data, aes(x = sentiment, y = count, fill = type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7), width = 0.6) +
scale_fill_manual(values = c("original_count" = "blue", "gemini_count" = "red")) +
labs(x = "Sentiment", y = "Count", title = "Comparison of Original and Gemini Sentiment Counts") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(wordcloud)
#library(wordcloud)
#library(RColorBrewer)
#gemini_to_sentiment <- c('1' = "anger", '2' = "boredom", '3' = "empty", '4' = "enthusiasm",
#                         '5' = "fun", '6' = "happiness", '7' = "hate", '8' = "love",
#                         '9' = "neutral", '10' = "relief", '11' = "sadness", '12' = "surprise",
#                         '13' = "worry", 'NA' = "NA")
#data$sentiment2 <- as.character(gemini_to_sentiment[as.character(data$gemini)])
#data$sentiment2[is.na(data$sentiment2)] <- "Unknown"
#table(data$sentiment2)
library(tm)
ndat = read.csv('./text_emotion_proc_gemini.csv')
corpus = iconv(ndat$sentiment)
corpus = Corpus(VectorSource(corpus))
tdm <- TermDocumentMatrix(corpus)
tdm <- as.matrix(tdm)
w <- sort(rowSums(tdm), decreasing = TRUE)
wordcloud(words = names(w),
freq = w,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
corpus = iconv(ndat$gemini)
corpus = Corpus(VectorSource(corpus))
tdm <- TermDocumentMatrix(corpus)
tdm <- as.matrix(tdm)
w <- sort(rowSums(tdm), decreasing = TRUE)
wordcloud(words = names(w),
freq = w,
max.words = 150,
random.order = F,
min.freq = 5,
colors = brewer.pal(8, 'Dark2'),
scale = c(1.5, 0.5),
rot.per = 0.7)
library(nnet)
multinom_model <- multinom(sentiment ~ gemini, data = data)
summary(multinom_model)
lm_model <- lm(sentiment ~ gemini, data = data)
summary(lm_model)
library(caret) #lol it brokey bc forgor to factor
confusionMatrix(as.factor(data$sentiment), as.factor(data$gemini), positive = NULL, dnn = c("Prediction", "Gemini"))
R: tinytex::install_tinytex()
tinytex::install_tinytex()
data
data$sentiment.uniwue()
unique(data$gemini)
library(nnet)
data = na.omit(data)
multinom_model <- multinom(sentiment ~ gemini, data = data)
summary(multinom_model)
unique(data$gemini)
library(caret) #lol it brokey bc forgor to factor
c = confusionMatrix(as.factor(data$sentiment), as.factor(data$gemini), positive = NULL, dnn = c("Prediction", "Gemini"))
plt <- as.data.frame(c$table)
ggplot(plt, aes(Prediction,Reference, fill= Freq)) +
geom_tile() + geom_text(aes(label=Freq)) +
scale_fill_gradient(low="white", high="#009194") +
labs(x = "Reference",y = "Prediction") +
scale_x_discrete(labels=c("Class_1","Class_2","Class_3","Class_4")) +
scale_y_discrete(labels=c("Class_4","Class_3","Class_2","Class_1"))
c$table
library(caret) #lol it brokey bc forgor to factor
c = confusionMatrix(as.factor(data$sentiment), as.factor(data$gemini), positive = NULL, dnn = c("Prediction", "Gemini"))
plt <- as.data.frame(c$table)
ggplot(plt, aes(Prediction,Gemini, fill= Freq)) +
geom_tile() + geom_text(aes(label=Freq)) +
scale_fill_gradient(low="white", high="#009194") +
labs(x = "Reference",y = "Prediction") +
scale_x_discrete(labels=c("Class_1","Class_2","Class_3","Class_4")) +
scale_y_discrete(labels=c("Class_4","Class_3","Class_2","Class_1"))
library(caret) #lol it brokey bc forgor to factor
c = confusionMatrix(as.factor(data$sentiment), as.factor(data$gemini), positive = NULL, dnn = c("Prediction", "Gemini"))
plt <- as.data.frame(c$table)
ggplot(plt, aes(Prediction,Gemini, fill= Freq)) +
geom_tile() + geom_text(aes(label=Freq)) +
scale_fill_gradient(low="white", high="#009194") +
labs(x = "Reference",y = "Gemini") +
scale_x_discrete(labels=c("Class_1","Class_2","Class_3","Class_4")) +
scale_y_discrete(labels=c("Class_4","Class_3","Class_2","Class_1"))
